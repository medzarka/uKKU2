# Generated by Django 3.2.6 on 2021-08-04 12:35

import _data._data_measurement
import _data._data_quality
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('academic_year_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year_name', models.CharField(max_length=100, unique=True, verbose_name='Academic Year Name')),
                ('academic_year_date_start', models.DateField(verbose_name='First day')),
                ('academic_year_date_end', models.DateField(verbose_name='Last day')),
            ],
            options={
                'verbose_name': 'Academic Year',
                'verbose_name_plural': 'Academic Years',
                'ordering': ['academic_year_date_start'],
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('campus_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Campus ID')),
                ('campus_name', models.CharField(max_length=512, verbose_name='Campus Name')),
                ('campus_name_ar', models.CharField(max_length=512, verbose_name='Campus Arabic Name')),
            ],
            options={
                'verbose_name': 'Campus',
                'verbose_name_plural': 'Campus',
                'ordering': ['campus_id', 'campus_name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Course ID')),
                ('course_code', models.CharField(max_length=100, verbose_name='Course Code')),
                ('course_code_ar', models.CharField(max_length=100, verbose_name='Course Arabic Code')),
                ('course_name', models.CharField(max_length=500, verbose_name='Course Name')),
                ('course_name_ar', models.CharField(max_length=500, verbose_name='Course Arabic Name')),
                ('course_level', models.IntegerField(default=1, verbose_name='Course Level')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['program', 'course_code'],
            },
        ),
        migrations.CreateModel(
            name='Course_CFI',
            fields=[
                ('course_cfi_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Course CFI ID')),
                ('submission_time', models.DateTimeField(auto_now=True, verbose_name='Submission time')),
                ('course_specification_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='Course Specification File')),
                ('exams_samples_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='Exams Samples File')),
                ('marks_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='Marks File')),
                ('clos_measurement_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='CLOs Measurement File')),
                ('course_report_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='Course Report File')),
                ('kpis_measurements_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='KPIs Measurement File')),
                ('instructor_schedule_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='Instructor Schedule File')),
                ('course_plan_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='Course Plan File')),
                ('curriculum_vitae_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_upload_file_name, validators=[_data._data_quality.validate_file_size, _data._data_quality.validate_file_type], verbose_name='Faculty Curriculum Vitae')),
                ('cfi_version', models.IntegerField(default=0, verbose_name='Version')),
                ('cfi_report_state', models.IntegerField(default=0, verbose_name='State')),
                ('cfi_remarks', models.TextField(blank=True, default='', null=True, verbose_name='Remarks')),
            ],
            options={
                'verbose_name': 'Course File Index File',
                'verbose_name_plural': 'Course File Index Files',
                'ordering': ['course_cfi_id', 'submission_time'],
            },
        ),
        migrations.CreateModel(
            name='CourseFile',
            fields=[
                ('course_file_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Course File ID')),
                ('submission_time', models.DateTimeField(auto_now=True, verbose_name='Submission time')),
                ('course_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Course Name')),
                ('course_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Course Code')),
                ('campus_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Campus Name')),
                ('section_codes', models.CharField(blank=True, max_length=250, null=True, verbose_name='Sections')),
                ('stat_mean', models.CharField(blank=True, max_length=250, null=True, verbose_name='Mean')),
                ('stat_std', models.CharField(blank=True, max_length=250, null=True, verbose_name='STD')),
                ('stat_skewness', models.CharField(blank=True, max_length=250, null=True, verbose_name='Skewness')),
                ('stat_correlation_sig', models.CharField(blank=True, max_length=250, null=True, verbose_name='Correlation (Sig)')),
                ('stat_correlation_value', models.CharField(blank=True, max_length=250, null=True, verbose_name='Correlation')),
                ('stat_min', models.CharField(blank=True, max_length=250, null=True, verbose_name='Min')),
                ('stat_max', models.CharField(blank=True, max_length=250, null=True, verbose_name='Max')),
                ('stat_histogram', models.FileField(blank=True, null=True, upload_to='measurement/histograms/')),
                ('stat_analysis', models.TextField(blank=True, null=True, verbose_name='Analysis')),
                ('stat_ttest_annova_value', models.CharField(blank=True, max_length=250, null=True, verbose_name='TTEST/ANNOVA value')),
                ('stat_ttest_annova_sig', models.CharField(blank=True, max_length=250, null=True, verbose_name='TTEST/ANNOVA Sig.')),
                ('stat_ttest_annova', models.CharField(blank=True, default='none', max_length=250, null=True, verbose_name='Test Type')),
                ('report_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_measurement.get_courses_reports_upload_file_name)),
                ('teacher_analysis', models.TextField(blank=True, null=True, verbose_name='Teacher Analysis')),
                ('report_state', models.IntegerField(default=0, verbose_name='State')),
                ('remarks', models.TextField(default='', verbose_name='Remarks')),
                ('version', models.IntegerField(default=0, verbose_name='Version')),
            ],
            options={
                'verbose_name': 'Course Report',
                'verbose_name_plural': 'Course Reports',
                'ordering': ['course_name', 'submission_time'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Department')),
                ('department_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Department Name')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['department_name'],
            },
        ),
        migrations.CreateModel(
            name='DepartmentFile',
            fields=[
                ('department_file_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Department File ID')),
                ('submission_time', models.DateTimeField(auto_now=True, verbose_name='Submission time')),
                ('stat_histogram_low', models.FileField(blank=True, null=True, upload_to='measurement/histograms/')),
                ('stat_histogram_high', models.FileField(blank=True, null=True, upload_to='measurement/histograms/')),
                ('report_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_measurement.get_department_reports_upload_file_name)),
                ('teacher_analysis', models.TextField(blank=True, null=True, verbose_name='Teacher Analysis')),
            ],
            options={
                'verbose_name': 'Department Report',
                'verbose_name_plural': 'Department Reports',
                'ordering': ['semester', 'department'],
            },
        ),
        migrations.CreateModel(
            name='GradesFile',
            fields=[
                ('grades_file_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Grades File ID')),
                ('submission_time', models.DateTimeField(auto_now=True, verbose_name='Submission time')),
                ('course_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Course Name')),
                ('course_code', models.CharField(blank=True, max_length=250, null=True, verbose_name='Course Code')),
                ('campus_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Campus Name')),
                ('section_code', models.IntegerField(blank=True, null=True, verbose_name='Section Code')),
                ('stat_mean', models.CharField(blank=True, max_length=250, null=True, verbose_name='Grades Mean')),
                ('stat_std', models.CharField(blank=True, max_length=250, null=True, verbose_name='Grades STD')),
                ('stat_skewness', models.CharField(blank=True, max_length=250, null=True, verbose_name='Grades Skewness')),
                ('stat_correlation_sig', models.CharField(blank=True, max_length=250, null=True, verbose_name='Grades Correlation (Sig)')),
                ('stat_correlation_value', models.CharField(blank=True, max_length=250, null=True, verbose_name='Grades Correlation')),
                ('stat_min', models.CharField(blank=True, max_length=250, null=True, verbose_name='Grades Min')),
                ('stat_max', models.CharField(blank=True, max_length=250, null=True, verbose_name='Grades Max')),
                ('stat_histogram', models.FileField(blank=True, null=True, upload_to='measurement/histograms/')),
                ('stat_analysis', models.TextField(blank=True, null=True, verbose_name='Grades Analysis')),
                ('grades_file', models.FileField(max_length=1024, upload_to=_data._data_measurement.get_sections_grades_upload_file_name)),
                ('report_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_measurement.get_sections_reports_upload_file_name)),
                ('teacher_analysis', models.TextField(blank=True, null=True, verbose_name='Grades Analysis')),
                ('version', models.IntegerField(default=0, verbose_name='Version')),
                ('report_state', models.IntegerField(default=0, verbose_name='State')),
                ('grades_data', models.TextField(blank=True, null=True, verbose_name='Grades Data')),
                ('remarks', models.TextField(blank=True, default='', null=True, verbose_name='Remarks')),
            ],
            options={
                'verbose_name': 'Grades File',
                'verbose_name_plural': 'Grades Files',
                'ordering': ['section_code', 'submission_time'],
            },
        ),
        migrations.CreateModel(
            name='MeasurementExportFile',
            fields=[
                ('measurement_export_file_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Measurement Export File ID')),
                ('submission_time', models.DateTimeField(auto_now=True, verbose_name='Submission time')),
                ('export_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_measurement.get_measurement_export_file_name)),
                ('state', models.IntegerField(default=0, verbose_name='State')),
                ('elapsedTime', models.TextField(default='', verbose_name='Elapsed Time')),
            ],
            options={
                'verbose_name': 'Measurement Export File',
                'verbose_name_plural': 'Measurement Export Files',
                'ordering': ['semester', 'submission_time', 'state'],
            },
        ),
        migrations.CreateModel(
            name='MeasurementReviewerAffectations',
            fields=[
                ('affectation_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Review Affectation ID')),
            ],
            options={
                'verbose_name': 'Measurement Reviewer Affectation',
                'verbose_name_plural': 'Measurement Reviewer Affectations',
                'ordering': ['reviewer', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('meeting_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Meeting ID')),
                ('section', models.IntegerField(verbose_name='Section')),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meetings',
                'ordering': ['semester', 'campus', 'department', 'teacher', 'course', 'section'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('program_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Program ID')),
                ('program_code', models.CharField(max_length=100, verbose_name='Program Code')),
                ('program_name', models.CharField(max_length=500, verbose_name='Program Name')),
                ('program_name_ar', models.CharField(max_length=500, verbose_name='Program Arabic Name')),
                ('program_version', models.CharField(max_length=100, verbose_name='Program Version')),
            ],
            options={
                'verbose_name': 'Academic Program',
                'verbose_name_plural': 'Academic Programs',
                'ordering': ['specialization', 'program_code', 'program_name', 'program_version'],
            },
        ),
        migrations.CreateModel(
            name='QualityExportFile',
            fields=[
                ('quality_export_file_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Quality Export File ID')),
                ('submission_time', models.DateTimeField(auto_now=True, verbose_name='Submission time')),
                ('export_file', models.FileField(blank=True, max_length=1024, null=True, upload_to=_data._data_quality.get_quality_export_file_name)),
                ('state', models.IntegerField(default=0, verbose_name='State')),
                ('elapsedTime', models.TextField(default='', verbose_name='Elapsed Time')),
                ('exec_trace', models.TextField(default='', verbose_name='Execution trace')),
            ],
            options={
                'verbose_name': 'Quality Export File',
                'verbose_name_plural': 'Quality Export Files',
                'ordering': ['semester', 'submission_time', 'state'],
            },
        ),
        migrations.CreateModel(
            name='ReviewerAffectations',
            fields=[
                ('affectation_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Review Affectation ID')),
            ],
            options={
                'verbose_name': 'Quality Reviewer Affectation',
                'verbose_name_plural': 'Quality Reviewer Affectations',
                'ordering': ['reviewer', 'user'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('semester_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_name', models.CharField(choices=[('TERM I', 'TERM I'), ('TERM II', 'TERM II'), ('SUMMER TERM', 'SUMMER TERM')], default='TERM I', max_length=100, verbose_name='Semester Name')),
                ('semester_date_start', models.DateField(verbose_name='First Day')),
                ('semester_date_end', models.DateField(verbose_name='Last Day')),
                ('semester_isInUse', models.BooleanField(default=False, verbose_name='Is in Use')),
            ],
            options={
                'verbose_name': 'Semester',
                'verbose_name_plural': 'Semesters',
                'ordering': ['semester_academic_year', 'semester_date_start'],
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('specialization_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Specialization ID')),
                ('specialization_code', models.CharField(max_length=100, verbose_name='Specialization Code')),
                ('specialization_name', models.CharField(max_length=500, verbose_name='Program Name')),
                ('specialization_name_ar', models.CharField(max_length=500, verbose_name='Program Arabic Name')),
            ],
            options={
                'verbose_name': 'Academic Specialization',
                'verbose_name_plural': 'Academic Specializations',
                'ordering': ['specialization_code', 'specialization_name'],
            },
        ),
        migrations.AddIndex(
            model_name='specialization',
            index=models.Index(fields=['specialization_code'], name='Ddata_speci_special_853d2a_idx'),
        ),
        migrations.AddIndex(
            model_name='specialization',
            index=models.Index(fields=['specialization_name'], name='Ddata_speci_special_1f6ad1_idx'),
        ),
        migrations.AddIndex(
            model_name='specialization',
            index=models.Index(fields=['specialization_name_ar'], name='Ddata_speci_special_01f4ad_idx'),
        ),
        migrations.AddField(
            model_name='semester',
            name='semester_academic_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_data.academicyear', verbose_name='Academic Year'),
        ),
        migrations.AddField(
            model_name='revieweraffectations',
            name='reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='affectationReviewers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='revieweraffectations',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_data.semester'),
        ),
        migrations.AddField(
            model_name='revieweraffectations',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affectationUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='qualityexportfile',
            name='semester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.semester'),
        ),
        migrations.AddField(
            model_name='qualityexportfile',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='program',
            name='specialization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.specialization', verbose_name='Specialization'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='campus',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.campus'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='_data.course'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_data.department'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_data.semester'),
        ),
        migrations.AddField(
            model_name='meeting',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='measurementrevieweraffectations',
            name='reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MeasurementaffectationReviewers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='measurementrevieweraffectations',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='_data.semester'),
        ),
        migrations.AddField(
            model_name='measurementrevieweraffectations',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MeasurementaffectationUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='measurementexportfile',
            name='semester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.semester'),
        ),
        migrations.AddField(
            model_name='measurementexportfile',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gradesfile',
            name='reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gradesfile',
            name='section_courseObj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.course'),
        ),
        migrations.AddField(
            model_name='gradesfile',
            name='section_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.department'),
        ),
        migrations.AddField(
            model_name='gradesfile',
            name='semester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.semester'),
        ),
        migrations.AddField(
            model_name='gradesfile',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='departmentfile',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.department'),
        ),
        migrations.AddField(
            model_name='departmentfile',
            name='semester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.semester'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['department_id'], name='Ddata_depar_departm_0675c8_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['department_name'], name='Ddata_depar_departm_f5b816_idx'),
        ),
        migrations.AddField(
            model_name='coursefile',
            name='course_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.department'),
        ),
        migrations.AddField(
            model_name='coursefile',
            name='reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Reviewer'),
        ),
        migrations.AddField(
            model_name='coursefile',
            name='semester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.semester'),
        ),
        migrations.AddField(
            model_name='coursefile',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course_cfi',
            name='cfi_reviewer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cfi_reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course_cfi',
            name='gradeFile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_CFIs', to='_data.gradesfile'),
        ),
        migrations.AddField(
            model_name='course',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='_data.program', verbose_name='Academic Program'),
        ),
        migrations.AddIndex(
            model_name='campus',
            index=models.Index(fields=['campus_id'], name='Ddata_campu_campus__c7896a_idx'),
        ),
        migrations.AddIndex(
            model_name='campus',
            index=models.Index(fields=['campus_name'], name='Ddata_campu_campus__930d57_idx'),
        ),
        migrations.AddIndex(
            model_name='campus',
            index=models.Index(fields=['campus_name_ar'], name='Ddata_campu_campus__78912e_idx'),
        ),
        migrations.AddIndex(
            model_name='academicyear',
            index=models.Index(fields=['academic_year_name'], name='Ddata_acade_academi_122401_idx'),
        ),
        migrations.AddIndex(
            model_name='semester',
            index=models.Index(fields=['semester_name'], name='Ddata_semes_semeste_b560d3_idx'),
        ),
        migrations.AddIndex(
            model_name='semester',
            index=models.Index(fields=['semester_academic_year'], name='Ddata_semes_semeste_8de9c2_idx'),
        ),
        migrations.AddIndex(
            model_name='revieweraffectations',
            index=models.Index(fields=['user'], name='Ddata_revie_user_id_e1193d_idx'),
        ),
        migrations.AddIndex(
            model_name='revieweraffectations',
            index=models.Index(fields=['reviewer'], name='Ddata_revie_reviewe_20060b_idx'),
        ),
        migrations.AddIndex(
            model_name='revieweraffectations',
            index=models.Index(fields=['semester'], name='Ddata_revie_semeste_59ccfe_idx'),
        ),
        migrations.AddIndex(
            model_name='qualityexportfile',
            index=models.Index(fields=['submission_time'], name='Ddata_quali_submiss_cee266_idx'),
        ),
        migrations.AddIndex(
            model_name='qualityexportfile',
            index=models.Index(fields=['semester'], name='Ddata_quali_semeste_f02c8d_idx'),
        ),
        migrations.AddIndex(
            model_name='qualityexportfile',
            index=models.Index(fields=['teacher'], name='Ddata_quali_teacher_5c8162_idx'),
        ),
        migrations.AddIndex(
            model_name='qualityexportfile',
            index=models.Index(fields=['state'], name='Ddata_quali_state_dfe046_idx'),
        ),
        migrations.AddIndex(
            model_name='program',
            index=models.Index(fields=['program_code'], name='Ddata_progr_program_067a74_idx'),
        ),
        migrations.AddIndex(
            model_name='program',
            index=models.Index(fields=['program_name'], name='Ddata_progr_program_12f7e0_idx'),
        ),
        migrations.AddIndex(
            model_name='program',
            index=models.Index(fields=['program_name_ar'], name='Ddata_progr_program_1a42e7_idx'),
        ),
        migrations.AddIndex(
            model_name='program',
            index=models.Index(fields=['program_version'], name='Ddata_progr_program_76783e_idx'),
        ),
        migrations.AddIndex(
            model_name='program',
            index=models.Index(fields=['specialization'], name='Ddata_progr_special_19f36c_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['semester'], name='Ddata_meeti_semeste_3fdbcf_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['campus'], name='Ddata_meeti_campus__7b172a_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['department'], name='Ddata_meeti_departm_670f37_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['teacher'], name='Ddata_meeti_teacher_6a8053_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['course'], name='Ddata_meeti_course__10e8af_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['section'], name='Ddata_meeti_section_78c342_idx'),
        ),
        migrations.AddIndex(
            model_name='measurementrevieweraffectations',
            index=models.Index(fields=['user'], name='Ddata_measu_user_id_ee7813_idx'),
        ),
        migrations.AddIndex(
            model_name='measurementrevieweraffectations',
            index=models.Index(fields=['reviewer'], name='Ddata_measu_reviewe_38dc6a_idx'),
        ),
        migrations.AddIndex(
            model_name='measurementrevieweraffectations',
            index=models.Index(fields=['semester'], name='Ddata_measu_semeste_6ba83f_idx'),
        ),
        migrations.AddIndex(
            model_name='measurementexportfile',
            index=models.Index(fields=['submission_time'], name='Ddata_measu_submiss_c3279f_idx'),
        ),
        migrations.AddIndex(
            model_name='measurementexportfile',
            index=models.Index(fields=['semester'], name='Ddata_measu_semeste_b8e4a1_idx'),
        ),
        migrations.AddIndex(
            model_name='measurementexportfile',
            index=models.Index(fields=['teacher'], name='Ddata_measu_teacher_4e0e2a_idx'),
        ),
        migrations.AddIndex(
            model_name='measurementexportfile',
            index=models.Index(fields=['state'], name='Ddata_measu_state_d740dc_idx'),
        ),
        migrations.AddIndex(
            model_name='gradesfile',
            index=models.Index(fields=['submission_time'], name='Ddata_grade_submiss_7f858d_idx'),
        ),
        migrations.AddIndex(
            model_name='gradesfile',
            index=models.Index(fields=['section_code'], name='Ddata_grade_section_5e6b26_idx'),
        ),
        migrations.AddIndex(
            model_name='gradesfile',
            index=models.Index(fields=['course_name'], name='Ddata_grade_course__bbe56a_idx'),
        ),
        migrations.AddIndex(
            model_name='gradesfile',
            index=models.Index(fields=['campus_name'], name='Ddata_grade_campus__a5aa0b_idx'),
        ),
        migrations.AddIndex(
            model_name='gradesfile',
            index=models.Index(fields=['section_department'], name='Ddata_grade_section_27b9f4_idx'),
        ),
        migrations.AddIndex(
            model_name='gradesfile',
            index=models.Index(fields=['section_courseObj'], name='Ddata_grade_section_d9fa7d_idx'),
        ),
        migrations.AddIndex(
            model_name='departmentfile',
            index=models.Index(fields=['submission_time'], name='Ddata_depar_submiss_8ac50d_idx'),
        ),
        migrations.AddIndex(
            model_name='departmentfile',
            index=models.Index(fields=['department'], name='Ddata_depar_departm_8593b2_idx'),
        ),
        migrations.AddIndex(
            model_name='departmentfile',
            index=models.Index(fields=['semester'], name='Ddata_depar_semeste_2074b1_idx'),
        ),
        migrations.AddIndex(
            model_name='coursefile',
            index=models.Index(fields=['submission_time'], name='Ddata_cours_submiss_bbb848_idx'),
        ),
        migrations.AddIndex(
            model_name='coursefile',
            index=models.Index(fields=['course_name'], name='Ddata_cours_course__27ba21_idx'),
        ),
        migrations.AddIndex(
            model_name='coursefile',
            index=models.Index(fields=['campus_name'], name='Ddata_cours_campus__35dd40_idx'),
        ),
        migrations.AddIndex(
            model_name='coursefile',
            index=models.Index(fields=['course_department'], name='Ddata_cours_course__8834a9_idx'),
        ),
        migrations.AddIndex(
            model_name='course_cfi',
            index=models.Index(fields=['submission_time'], name='Ddata_cours_submiss_ab0e0c_idx'),
        ),
        migrations.AddIndex(
            model_name='course_cfi',
            index=models.Index(fields=['gradeFile'], name='Ddata_cours_gradeFi_f68a97_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_code'], name='Ddata_cours_course__805002_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_name'], name='Ddata_cours_course__311c23_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_name_ar'], name='Ddata_cours_course__ef0d4f_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['program'], name='Ddata_cours_program_f444a1_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_level'], name='Ddata_cours_course__15180a_idx'),
        ),
    ]
